{"version":3,"sources":["components/Footer.js","actions/userActions.js","constants/userConstants.js","components/SearchBox.js","components/Header.js","constants/orderConstants.js","components/Meta.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","actions/productActions.js","constants/productConstants.js","components/ProductCarousel.js","components/Paginate.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","constants/cartConstants.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderAction.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/OrderListScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","App.js","serviceWorker.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","store.js","reducers/orderReducers.js","index.js"],"names":["Footer","Container","Row","Col","className","getUserDetails","id","dispatch","getState","a","type","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","Button","variant","Header","useDispatch","useSelector","state","Navbar","bg","expand","collapseOnSelect","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","localStorage","removeItem","isAdmin","Meta","description","keywords","Helmet","content","defaultProps","Rating","text","color","style","Product","product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","width","height","margin","display","Message","children","Alert","listProducts","pageNumber","listProductDetails","ProductCarousel","productTopRated","loading","error","products","useEffect","console","log","Carousel","pause","map","key","Image","alt","fluid","Caption","Paginate","pages","page","Pagination","Array","keys","x","active","PageItem","HomeScreen","match","params","productList","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","productDetails","productReviewCreate","errorProductReview","successProductReview","success","alert","ListGroup","countInStock","disabled","reviews","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","JSON","stringify","cart","cartItems","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","item","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","setTimeout","register","ProfileScreen","userDetails","user","userUpdateProfile","orderListMy","loadingOrders","errorOrders","orders","put","updateUserProfile","Table","striped","bordered","hover","responsive","order","totalPrice","isPaid","paidAt","isDelivered","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","paymentMethod","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","orderCreate","ariant","i","createOrder","orderItems","OrderScreen","sdkReady","setSdkReady","orderId","orderDetails","orderPay","loadingPay","successPay","orderDeliver","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","deliveredAt","amount","currency","onSuccess","paymentResult","payOrder","deliverOrder","OrderListScreen","orderList","UserListScreen","userList","users","successDelete","userDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","userUpdate","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","productDelete","loadingDelete","errorDelete","productCreate","loadingCreate","errorCreate","createdProduct","successCreate","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","productUpdate","countInstock","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","App","path","component","exact","Boolean","hostname","initialState","initState","reducer","combineReducers","action","existItem","find","filter","cartItemFromStorage","getItem","parse","userInfoFromStorage","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a7d0e9c5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">\r\n                        Copyright &copy; Proshop\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import {\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_RESET,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_FAIL,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_REQUEST,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL\r\n\r\n} from \"../constants/userConstants\";\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\nimport axios from 'axios';\r\n\r\n\r\n// logging with user credentials\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_LOGIN_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\"/api/users/login\", { email, password }, config)\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    localStorage.removeItem('cartItems')\r\n    localStorage.removeItem('paymentMethod')\r\n    localStorage.removeItem('shippingAddress')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n\r\n}\r\n\r\n//  registring new users\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_REGISTER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\"/api/users\", { name, email, password }, config)\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\n// getting user details\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_DETAILS_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config)\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\n// update user details\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_UPDATE_PROFILE_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, user, config)\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_LIST_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/users', config)\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_DELETE_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/users/${id}`, config)\r\n        dispatch({ type: USER_DELETE_SUCCESS })\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_UPDATE_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n        dispatch({ type: USER_UPDATE_SUCCESS })\r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}","// user login constants\r\n\r\nexport const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\n// user register constants\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\n// user details constants\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\n// user update constants\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\n// user list constants\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\n// user list delete constants\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\n// user list constants\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n\r\n        }\r\n        else {\r\n            history.push('/')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control type='text' name='q' onChange={(e) => setKeyword(e.target.value)}\r\n                placeholder='Search Products...'\r\n                className='mr-sm-2 ml-sm-5'>\r\n            </Form.Control>\r\n            <Button type='submit' variant='outline-success' className='p-2'>Search</Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\r\nimport { logout } from '../actions/userActions';\r\nimport SearchBox from './SearchBox';\r\n\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n    const logoutHandler = (e) => {\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to=\"/\">\r\n                        <Navbar.Brand >ProShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Route render={({ history }) => <SearchBox history={history} />} />\r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to=\"/cart\" >\r\n                                <Nav.Link ><i className=\"fas fa-shopping-cart\"  ></i>Cart</Nav.Link>\r\n                            </LinkContainer>\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) :\r\n                                <LinkContainer to=\"/login\" >\r\n                                    <Nav.Link ><i className=\"fas fa-user\"  ></i>Sign In</Nav.Link>\r\n                                </LinkContainer>\r\n                            }\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenu'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                </NavDropdown>\r\n\r\n                            )}\r\n                        </Nav>\r\n\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","// order constants \r\nexport const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\nexport const ORDER_DETAILS_RESET = 'ORDER_DETAILS_RESET'\r\n\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\n\r\n// constansts for all orders for admin only\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\n\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>{title}</title>\r\n                <meta name='description' content={description} />\r\n                <meta name='keyword' content={keywords} />\r\n            </Helmet>\r\n        </div>\r\n    );\r\n}\r\n\r\nMeta.defaultProps = {\r\n    title: 'Welcome To ProShop',\r\n    description: 'We sell the best products for cheap',\r\n    keywords: 'electronics,phones,mobiles,cameras'\r\n\r\n}\r\n\r\nexport default Meta;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Rating = ({ text, value, color }) => {\r\n    return (\r\n        <div className=\"raitng\">\r\n            <span>\r\n                <i style={{ color }} className={value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'} ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'} ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'} ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={value >= 4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'} ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={value >= 5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'} ></i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825'\r\n}\r\nRating.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string\r\n}\r\n\r\n\r\nexport default Rating;\r\n","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Rating from './Rating';\r\n\r\nconst Product = ({ product }) => {\r\n    return (\r\n        <Card className=\"my-3 py-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant=\"top\" />\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div' ><strong>{product.name}</strong></Card.Title>\r\n                </Link>\r\n                <Card.Text as=\"div\">\r\n                    <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                    {/* <div className=\"my-3\">\r\n                        {product.rating} from {product.numReviews} reviews\r\n\r\n                    </div> */}\r\n                </Card.Text>\r\n                <Card.Text as=\"h3\">\r\n                    &#x20B9; {product.price}\r\n\r\n                </Card.Text>\r\n            </Card.Body>\r\n\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Product;\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner animation=\"border\" role='status' style={{ width: '100px', height: '100px', margin: 'auto', display: 'block' }}>\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n    );\r\n}\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n\r\n        </Alert>\r\n    );\r\n}\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message;\r\n","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n} from '../constants/productConstants';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n        dispatch({\r\n            type:\r\n                PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n\r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({ type: PRODUCT_DELETE_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config)\r\n\r\n        dispatch({ type: PRODUCT_DELETE_SUCCESS })\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({ type: PRODUCT_CREATE_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/products`, {}, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({ type: PRODUCT_UPDATE_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/products/${product._id}`, product, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n        const { data } = await axios.get(`/api/products/top`)\r\n        console.log(data)\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n\r\n        })\r\n\r\n    }\r\n\r\n}","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","import React, { useEffect } from 'react';\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from './Loader';\r\nimport Message from './Message';\r\nimport { listTopProducts } from '../actions/productActions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProductCarousel = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { loading, error, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {products.map((product) => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid />\r\n                                <Carousel.Caption className='carousel-caption'>\r\n                                    <h2 className='mx-0 my-0'>\r\n                                        {product.name} (&#x20B9;{product.price})\r\n                  </h2>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n}\r\n\r\nexport default ProductCarousel;\r\n","import React from 'react';\r\nimport { PageItem, Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n\r\n\r\n\r\n    return pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer key={x + 1} to={!isAdmin ? keyword ? `/search/${keyword}/page/${x + 1}` : `/page/${x + 1}` : `/admin/productlist/${x + 1}`} >\r\n                    <Pagination.Item active={x + 1 === PageItem}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n}\r\n\r\nexport default Paginate;\r\n","import React, { useEffect } from 'react';\r\nimport Meta from '../components/Meta';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Product from '../components/Product';\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions';\r\nimport Paginate from '../components/Paginate';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\n\r\n\r\nconst HomeScreen = ({ match }) => {\r\n    const keyword = match.params.keyword\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, page, pages } = productList\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber))\r\n\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Meta />\r\n            {!keyword ? <ProductCarousel /> : <Link to=\"/\" className='btn btn-light'>Go Back</Link>}\r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\r\n                <>\r\n                    <Row>\r\n                        {products.map(product => (\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Product product={product} />\r\n\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                    <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} >\r\n\r\n                    </Paginate>\r\n                </>\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\r\n// import products from '../products';\r\nimport Meta from '../components/Meta';\r\nimport Rating from '../components/Rating';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listProductDetails, createProductReview } from '../actions/productActions';\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n\r\n    const [qty, setQty] = useState(1);\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState('')\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const { error: errorProductReview, success: successProductReview } = productReviewCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            alert('Review Submitted !')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match, successProductReview])\r\n    // const product = products.find((p) => p._id === match.params.id)\r\n\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(createProductReview(match.params.id, {\r\n            rating,\r\n            comment\r\n        }))\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link className=\"btn btn-dark my-3\" to=\"/\">\r\n                Go Back\r\n            </Link>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <>\r\n                    <Meta title={product.name} />\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Image src={product.image} alt={product.name} fluid />\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <ListGroup variant=\"flush\">\r\n                                <ListGroup.Item>\r\n                                    <h3>{product.name}</h3>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    Price:&#x20B9; {product.price}\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    Description:{product.description}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <Card>\r\n                                <ListGroup variant=\"flush\">\r\n                                    <ListGroup.Item>\r\n                                        <Row >\r\n                                            <Col>\r\n                                                Price:\r\n                                    </Col>\r\n                                            <Col>\r\n                                                <strong>&#x20B9; {product.price} </strong>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <Row >\r\n                                            <Col>\r\n                                                Status:\r\n                                    </Col>\r\n                                            <Col>\r\n                                                {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                    {\r\n                                        product.countInStock > 0 && (\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Qty</Col>\r\n                                                    <Col>\r\n                                                        <Form.Control as=\"select\" value={qty} onChange={(e) => { setQty(e.target.value) }}>\r\n\r\n                                                            {\r\n                                                                [...Array(product.countInStock).keys()].map(x => (\r\n                                                                    <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                                                                ))\r\n                                                            }\r\n                                                        </Form.Control>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        )\r\n                                    }\r\n                                    <ListGroup.Item>\r\n                                        <Button onClick={addToCartHandler} className=\"btn-block\" type=\"button\" disabled={product.countInStock === 0}>\r\n                                            Add to Cart\r\n                                </Button>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <h2>Reviews</h2>\r\n                            {product.reviews.length === 0 && <Message>No reviews</Message>}\r\n                            <ListGroup variant='flush'>\r\n                                {product.reviews.map(review => (\r\n                                    <ListGroup.Item key={review._id}>\r\n                                        <strong>{review.name}</strong>\r\n                                        <Rating value={review.rating} />\r\n                                        <p>{review.createdAt.substring(0, 10)}</p>\r\n                                        <p>{review.comment}</p>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                                <ListGroup.Item><h2>Write a Customer Review</h2>\r\n                                    {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n                                    {userInfo ? (\r\n                                        <Form onSubmit={submitHandler}>\r\n                                            <Form.Group controlId='rating'>\r\n                                                <Form.Label>Rating</Form.Label>\r\n                                                <Form.Control as='select' value={rating} onChange={(e) => setRating(e.target.value)}>\r\n                                                    <option value=''>Select..</option>\r\n                                                    <option value='1'>1-Poor</option>\r\n                                                    <option value='2'>2-Fair</option>\r\n                                                    <option value='3'>3-Good</option>\r\n                                                    <option value='4'>4-Very Good</option>\r\n                                                    <option value='5'>5-Excellent</option>\r\n                                                </Form.Control>\r\n\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId='comment'>\r\n                                                <Form.Label>Comment</Form.Label>\r\n                                                <Form.Control as='textarea'\r\n                                                    row='3'\r\n                                                    value={comment}\r\n                                                    onChange={(e) => setComment(e.target.value)}>\r\n\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Button type='submit' variant='primary'>\r\n                                                Submit\r\n                                        </Button>\r\n\r\n                                        </Form>\r\n                                    ) : (<Message>please <Link to='/login' >Login</Link> to write a review</Message>)}</ListGroup.Item>\r\n                            </ListGroup>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n\r\n\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductScreen;\r\n","\r\nimport axios from 'axios';\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_SAVE_SHIPPING_ADDRESS\r\n} from '../constants/cartConstants';\r\n\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({ type: CART_REMOVE_ITEM, payload: id })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n\r\n    dispatch({ type: CART_SAVE_SHIPPING_ADDRESS, payload: data })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n\r\n    dispatch({ type: CART_SAVE_PAYMENT_METHOD, payload: data })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","// Cart constants\r\n\r\nexport const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch();\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n\r\n    }\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>ShoppingCart</h1>\r\n                {cartItems.length === 0 ? <Message >Your cart is empty <Link to=\"/\">Go Back</Link></Message> :\r\n                    (<ListGroup variant=\"flush\">\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`} >{item.name}</Link>\r\n\r\n                                    </Col>\r\n                                    <Col md={2} >\r\n                                        &#x20B9;{item.price}\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Form.Control as=\"select\" value={item.qty} onChange={(e) => { dispatch(addToCart(item.product, Number(e.target.value))) }}>\r\n\r\n                                            {\r\n                                                [...Array(item.countInStock).keys()].map(x => (\r\n                                                    <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                                                ))\r\n                                            }\r\n                                        </Form.Control>\r\n\r\n                                    </Col>\r\n                                    <Col md={2} >\r\n                                        <Button type=\"button\" variant=\"light\" onClick={() => removeFromCartHandler(item.product)}>\r\n                                            <i className=\"fas fa-trash\"></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>))}\r\n                    </ListGroup>)}\r\n\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})Items</h2>\r\n                            &#x20B9;{cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button type='button' className='btn-block' disabled={cartItems.length === 0} onClick={checkoutHandler}>\r\n                                Procced To Checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n\r\n            </Col>\r\n\r\n\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default CartScreen;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default FormContainer;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { login } from '../actions/userActions';\r\nimport FormContainer from '../components/FormContainer';\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch();\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password))\r\n\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder='Enter Email' value={email} onChange={(e) => setEmail(e.target.value)} ></Form.Control>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder='Enter password' value={password} onChange={(e) => setPassword(e.target.value)} ></Form.Control>\r\n\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer ? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register Here\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    );\r\n}\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { register } from '../actions/userActions';\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch();\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            setMessage('passwords do not Match')\r\n            setTimeout(() => {\r\n                setMessage('')\r\n            }, 5000)\r\n        }\r\n        else {\r\n\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder='Enter name' value={name} onChange={(e) => setName(e.target.value)} ></Form.Control>\r\n\r\n\r\n                </Form.Group>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder='Enter Email' value={email} onChange={(e) => setEmail(e.target.value)} ></Form.Control>\r\n\r\n\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder='Enter password' value={password} onChange={(e) => setPassword(e.target.value)} ></Form.Control>\r\n\r\n\r\n                </Form.Group>\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder='Confirm Password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} ></Form.Control>\r\n\r\n\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant='primary'>\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account ? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Login Here\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    );\r\n}\r\n\r\nexport default RegisterScreen;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\r\nimport { listMyOrders } from '../actions/orderAction';\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        else {\r\n            if (!user.name) {\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            }\r\n            else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            setMessage('passwords do not Match')\r\n            setTimeout(() => {\r\n                setMessage('')\r\n            }, 5000)\r\n        }\r\n        else {\r\n            // dispatch update profile\r\n            // dispatch(register(name, email, password))\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3} >\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {success && <Message variant='success'>Profile Updated</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder='Enter name' value={name} onChange={(e) => setName(e.target.value)} ></Form.Control>\r\n\r\n\r\n                    </Form.Group>\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder='Enter Email' value={email} onChange={(e) => setEmail(e.target.value)} ></Form.Control>\r\n\r\n\r\n                    </Form.Group>\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder='Enter password' value={password} onChange={(e) => setPassword(e.target.value)} ></Form.Control>\r\n\r\n\r\n                    </Form.Group>\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder='Confirm Password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} ></Form.Control>\r\n\r\n\r\n                    </Form.Group>\r\n                    <Button type=\"submit\" variant='primary'>\r\n                        Update\r\n                </Button>\r\n                </Form>\r\n\r\n            </Col>\r\n            <Col md={9} >\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message>\r\n                    : (<Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0, 10) :\r\n                                        (<i className='fas fa-times' style={{ color: 'red' }}></i>)}\r\n                                    </td>\r\n\r\n                                    <td>{order.isDelivered ? order.paidAt.substring(0, 10) :\r\n                                        (<i className='fas fa-times' style={{ color: 'red' }}></i>)}\r\n                                    </td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn btn-sm' variant='light'>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>)}\r\n\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default ProfileScreen;\r\n","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL\r\n} from '../constants/orderConstants';\r\nimport axios from 'axios';\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({ type: ORDER_CREATE_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/orders', order, config)\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({ type: ORDER_DETAILS_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({ type: ORDER_PAY_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({ type: ORDER_DELIVER_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({ type: ORDER_LIST_MY_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/orders/myorders', config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({ type: ORDER_LIST_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/orders', config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}","import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to=\"/login\">\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Sign In</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to=\"/shipping\">\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Shipping</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to=\"/payment\">\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Payment</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to=\"/placeorder\">\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Place Order</Nav.Link>}\r\n            </Nav.Item>\r\n\r\n        </Nav>\r\n    );\r\n}\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\n\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const { shippingAddress } = cart\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n\r\n        history.push('/payment')\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler} >\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label >Address</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter address\" value={address} onChange={(e) => setAddress(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n\r\n                </Form.Group>\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label >City</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter city\" value={city} onChange={(e) => setCity(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n\r\n                </Form.Group>\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label >Postal Code</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter postal code\" value={postalCode} onChange={(e) => setPostalCode(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n\r\n                </Form.Group>\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label >Coutnry</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter country\" value={country} onChange={(e) => setCountry(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    );\r\n}\r\n\r\nexport default ShippingScreen;\r\n","import React, { useState } from 'react';\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { savePaymentMethod } from '../actions/cartActions';\r\n\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const { shippingAddress } = cart\r\n    if (!shippingAddress) {\r\n        history.push(\"/shipping\")\r\n    }\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n\r\n        history.push('/placeorder')\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler} >\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n\r\n\r\n                    <Col>\r\n                        <Form.Check type='radio' label='PayPal or Credit Card' id='PayPal' name='paymentMethod' value=\"Paypal\" checked onChange={(e) => setPaymentMethod(e.target.value)}></Form.Check>\r\n                        <Form.Check type='radio' label='Stripe' id='Stripe' name='paymentMethod' value=\"Stripe\" onChange={(e) => setPaymentMethod(e.target.value)}></Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    );\r\n}\r\n\r\nexport default PaymentScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport Message from '../components/Message';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { createOrder } from '../actions/orderAction';\r\n\r\n\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    // calculate prices\r\n\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n        // eslint-disable-next-line\r\n\r\n    }, [history, success, order])\r\n    const placeOrderHandler = (e) => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n\r\n\r\n\r\n        }))\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup ariant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {cart.shippingAddress.address},{cart.shippingAddress.city},\r\n                            {cart.shippingAddress.postalCode},{cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment</h2>\r\n                            <strong>Method:</strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message>Your cart is empty</Message> : (\r\n                                <ListGroup variant='flus'>\r\n                                    {cart.cartItems.map((item, i) => (\r\n                                        <ListGroup.Item key={i} >\r\n                                            <Row >\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n\r\n                                                </Col>\r\n                                                <Col >\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x &#x20B9;{item.price} = &#x20B9;{item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>&#x20B9;{cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>&#x20B9;{cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>&#x20B9;{cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>&#x20B9;{cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button type='button' className='btn-block' disabled={cart.cartItems === 0} onClick={placeOrderHandler}>Place Order</Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\r\nimport Message from '../components/Message';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderAction';\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants';\r\n\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n\r\n\r\n\r\n    const orderId = match.params.id\r\n\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails);\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    if (!loading) {\r\n\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n        order.itemsPrice = addDecimals(order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n    }\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.async = true\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}&currency=INR`\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n        if (!order || successPay || successDeliver || order._id !== orderId) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n\r\n\r\n        }\r\n        else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            }\r\n            else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n\r\n        // eslint-disable-next-line\r\n\r\n    }, [history, userInfo, order, cartItems, sdkReady, orderId, successPay, successDeliver, dispatch])\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n\r\n        dispatch(payOrder(orderId, paymentResult))\r\n\r\n    }\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n\r\n    }\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n        <>\r\n            <h1>Order {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup ariant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Name:</strong>{order.user.name}</p>\r\n                            <p>\r\n                                <strong>Email:</strong>\r\n                                <a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {order.shippingAddress.address},{order.shippingAddress.city},\r\n                            {order.shippingAddress.postalCode},{order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? <Message variant='success'>Paid on {order.deliveredAt}</Message> : <Message variant='danger'>Not Delivered</Message>}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment</h2>\r\n                            <p>\r\n\r\n                                <strong>Method:</strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? <Message variant='success'>Paid on {order.paidAt}</Message> : <Message variant='danger'>Not Paid</Message>}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? <Message>Your order is empty</Message> : (\r\n                                <ListGroup variant='flus'>\r\n                                    {order.orderItems.map((item, i) => (\r\n                                        <ListGroup.Item key={i} >\r\n                                            <Row >\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n\r\n                                                </Col>\r\n                                                <Col >\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x &#x20B9;{item.price} = &#x20B9;{item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>&#x20B9;{order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>&#x20B9;{order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>&#x20B9;{order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>&#x20B9;{order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? (<Loader />) : (\r\n                                        <PayPalButton amount={order.totalPrice}\r\n                                            currency='INR'\r\n                                            onSuccess={successPaymentHandler} />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                            {loadingDeliver && <Loader />}\r\n                            {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                <ListGroup.Item>\r\n                                    <Button type='button' className='btn btn-block'\r\n                                        onClick={deliverHandler}>Mark As Delivered</Button>\r\n                                </ListGroup.Item>\r\n                            )}\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </>\r\n}\r\n\r\nexport default OrderScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listOrders } from '../actions/orderAction'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n\r\n        }\r\n        else {\r\n            history.push('/login')\r\n        }\r\n\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1>Orders</h1>\r\n            {loading ? <Loader /> : error ? <Message variant='danger' >{error}</Message> : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER</th>\r\n                            <td>DATE</td>\r\n                            <td>TOTAL </td>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERY </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user && order.user.name}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>{order.totalPrice}</td>\r\n                                <td>{order.isPaid ? (order.paidAt.substring(0, 10)) :\r\n                                    (<i className='fas fa-times' style={{ color: 'red' }}></i>)}\r\n                                </td>\r\n                                <td>\r\n                                    {order.isDelivered ? (order.deliveredAt.substring(0, 10)) :\r\n                                        (<i className='fas fa-times' style={{ color: 'red' }}></i>)\r\n                                    }\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            Details\r\n                                        </Button>\r\n\r\n                                    </LinkContainer>\r\n                                </td>\r\n\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n\r\n                </Table>\r\n            )}\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OrderListScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n\r\n        }\r\n        else {\r\n            history.push('/login')\r\n        }\r\n\r\n\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure ?')) {\r\n\r\n            dispatch(deleteUser(id))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Users</h1>\r\n            {loading ? <Loader /> : error ? <Message variant='danger' >{error}</Message> : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map(user => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                <td>\r\n                                    {user.isAdmin ? (<i className='fas fa-check' style={{ color: 'green' }}></i>) :\r\n                                        (<i className='fas fa-times' style={{ color: 'red' }}></i>)\r\n                                    }\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n\r\n                                    </LinkContainer>\r\n                                    <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n\r\n                </Table>\r\n            )}\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UserListScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { getUserDetails, updateUser } from '../actions/userActions';\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        }\r\n        else {\r\n\r\n\r\n            // if there is an existing user already,\r\n            //  we check if the user._id is equal to requested id,\r\n            //  if not then we go and fetch that user else we show that details\r\n            if (!user.name || user._id !== userId) {\r\n                dispatch(getUserDetails(userId))\r\n\r\n            }\r\n            else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, userId, dispatch, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateUser({\r\n            _id: userId,\r\n            name,\r\n            email,\r\n            isAdmin\r\n        }))\r\n\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n                    (\r\n                        <Form onSubmit={submitHandler}>\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder='Enter name' value={name} onChange={(e) => setName(e.target.value)} ></Form.Control>\r\n\r\n\r\n                            </Form.Group>\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control type=\"email\" placeholder='Enter Email' value={email} onChange={(e) => setEmail(e.target.value)} ></Form.Control>\r\n\r\n\r\n                            </Form.Group>\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)} >\r\n\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n                            <Button type=\"submit\" variant='primary'>\r\n                                Update\r\n                </Button>\r\n                        </Form>\r\n\r\n                    )}\r\n\r\n\r\n            </FormContainer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UserEditScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport Paginate from '../components/Paginate';\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants';\r\n\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1\r\n    const dispatch = useDispatch();\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, product: createdProduct, success: successCreate } = productCreate\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n\r\n        }\r\n        else {\r\n            dispatch(listProducts('', pageNumber))\r\n        }\r\n\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, pageNumber])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure ?')) {\r\n            dispatch(deleteProduct(id))\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                </Button>\r\n                </Col>\r\n\r\n            </Row>\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n            {loading ? <Loader /> : error ? <Message variant='danger' >{error}</Message> : (\r\n                <>\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>PRICE</th>\r\n                                <th>CATEGORY</th>\r\n                                <th>BRAND</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {products.map(product => (\r\n                                <tr key={product._id}>\r\n                                    <td>{product._id}</td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>{product.price}</td>\r\n                                    <td>\r\n                                        {product.category}\r\n                                    </td>\r\n                                    <td>{product.brand}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                            <Button variant='light' className='btn-sm'>\r\n                                                <i className='fas fa-edit'></i>\r\n                                            </Button>\r\n\r\n                                        </LinkContainer>\r\n                                        <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n\r\n                    </Table>\r\n                    <Paginate pages={pages} page={page} isAdmin={true}>\r\n\r\n                    </Paginate>\r\n                </>\r\n            )}\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProductListScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { listProductDetails, updateProduct } from '../actions/productActions';\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\r\n\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        }\r\n        else {\r\n            // if there is an existing user already,\r\n            //  we check if the user._id is equal to requested id,\r\n            //  if not then we go and fetch that user else we show that details\r\n            if (!product.name || product._id !== productId) {\r\n                dispatch(listProductDetails(productId))\r\n\r\n            }\r\n            else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setDescription(product.description)\r\n                setCategory(product.category)\r\n                setBrand(product.brand)\r\n                setImage(product.image)\r\n                setCountInStock(product.countInstock)\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }, [history, product, productId, dispatch, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            description,\r\n            countInStock,\r\n            category\r\n        }))\r\n\r\n\r\n    }\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n            console.log(data)\r\n            setImage(data)\r\n            setUploading(false)\r\n        }\r\n        catch (err) {\r\n            console.log(err)\r\n            setUploading(false)\r\n\r\n        }\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n                    (\r\n                        <Form onSubmit={submitHandler}>\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder='Enter name' value={name} onChange={(e) => setName(e.target.value)} ></Form.Control>\r\n\r\n\r\n                            </Form.Group>\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price </Form.Label>\r\n                                <Form.Control type=\"number\" placeholder='Enter Price' value={price} onChange={(e) => setPrice(e.target.value)} ></Form.Control>\r\n\r\n\r\n                            </Form.Group>\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter image url'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)} >\r\n\r\n                                </Form.Control>\r\n                                <Form.File id='image-file' label='Choose File' custom onChange={uploadFileHandler} >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter Brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)} >\r\n\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='countInStock'>\r\n                                <Form.Label>Count In Stock </Form.Label>\r\n                                <Form.Control type=\"number\" placeholder='Count In Stock' value={countInStock} onChange={(e) => setCountInStock(e.target.value)} ></Form.Control>\r\n\r\n\r\n                            </Form.Group>\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter Category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)} >\r\n\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter Description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)} >\r\n\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Button type=\"submit\" variant='primary'>\r\n                                Update\r\n                            </Button>\r\n                        </Form>\r\n\r\n                    )}\r\n\r\n\r\n            </FormContainer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProductEditScreen;\r\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport './App.css';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport HomeScreen from './screens/HomeScreen';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport OrderListScreen from './screens/OrderListScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <main className=\"py-3\">\n          <Container>\n            <Route path=\"/order/:id\" component={OrderScreen} />\n            <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n            <Route path=\"/shipping\" component={ShippingScreen} />\n            <Route path=\"/payment\" component={PaymentScreen} />\n            <Route path=\"/login\" component={LoginScreen} />\n            <Route path=\"/register\" component={RegisterScreen} />\n            <Route path=\"/profile\" component={ProfileScreen} />\n            <Route path=\"/product/:id\" component={ProductScreen} />\n            <Route path=\"/cart/:id?\" component={CartScreen} />\n            <Route path=\"/admin/userlist\" component={UserListScreen} />\n            <Route path=\"/admin/orderlist\" component={OrderListScreen} />\n            <Route path=\"/admin/productlist\" exact component={ProductListScreen} />\n            <Route path=\"/admin/productlist/:pageNumber\" exact component={ProductListScreen} />\n            <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n            <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\n            <Route path=\"/search/:keyword\" component={HomeScreen} exact />\n            <Route path=\"/page/:pageNumber\" component={HomeScreen} />\n            <Route path=\"/search/:keyword/page/:pageNumber\" component={HomeScreen} />\n            <Route path=\"/\" exact component={HomeScreen} />\n\n          </Container>\n        </main>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL\r\n} from '../constants/productConstants';\r\n\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    products: [],\r\n    error: ''\r\n\r\n}\r\n\r\nexport const productReducer = (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: payload.products,\r\n                pages: payload.pages,\r\n                page: payload.page\r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nconst initState = {\r\n    product: {\r\n        reviews: []\r\n    },\r\n    loading: false,\r\n    error: ''\r\n}\r\n\r\nexport const productDetailsReducer = (state = initState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                product: payload\r\n            }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                product: payload\r\n            }\r\n        case PRODUCT_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: payload\r\n            }\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                product: payload\r\n            }\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: payload\r\n            }\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n\r\n            }\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: payload\r\n            }\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: payload,\r\n\r\n            }\r\n        case PRODUCT_TOP_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_SAVE_SHIPPING_ADDRESS\r\n} from '../constants/cartConstants';\r\n\r\nconst initialState = {\r\n    cartItems: [],\r\n    shippingAddress: {}\r\n}\r\n\r\n\r\nexport const cartReducers = (state = initialState, action) => {\r\n    const { payload, type } = action;\r\n    switch (type) {\r\n        case CART_ADD_ITEM:\r\n            const item = payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== payload)\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: payload\r\n\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_RESET,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET\r\n} from \"../constants/userConstants\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    userInfo: [],\r\n    error: ''\r\n}\r\n\r\n\r\nexport const userLoginReducer = (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                userInfo: payload\r\n            }\r\n        case USER_LOGIN_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: payload\r\n            }\r\n        case USER_LOGOUT:\r\n            return {\r\n\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                userInfo: payload\r\n            }\r\n        case USER_REGISTER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: payload\r\n            }\r\n        case USER_LOGOUT:\r\n            return {\r\n\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const userDetailsReducer = (state = { loading: false, user: '', error: '' }, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                user: payload\r\n            }\r\n        case USER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: payload\r\n            }\r\n        case USER_DETAILS_RESET:\r\n            return {\r\n                user: {}\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = { loading: false, user: '', error: '' }, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                userInfo: payload\r\n            }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                users: payload,\r\n\r\n            }\r\n        case USER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: payload\r\n            }\r\n        case USER_LIST_RESET:\r\n            return {\r\n                users: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case USER_DELETE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n\r\n            }\r\n        case USER_DELETE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n\r\n            }\r\n        case USER_UPDATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: payload\r\n            }\r\n        case USER_UPDATE_RESET:\r\n            return {\r\n                user: {}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n    productReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer\r\n} from './reducers/productReducers';\r\nimport { cartReducers } from './reducers/cartReducers';\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer\r\n} from './reducers/userReducers';\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer\r\n} from './reducers/orderReducers';\r\n\r\nconst reducer = combineReducers({\r\n    productList: productReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducers,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer\r\n\r\n})\r\n\r\nconst cartItemFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\nconst initialState = {\r\n    cart: { cartItems: cartItemFromStorage, shippingAddress: shippingAddressFromStorage },\r\n    userLogin: { userInfo: userInfoFromStorage }\r\n}\r\n\r\n\r\n\r\nconst middleware = [thunk]\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store;","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET\r\n} from '../constants/orderConstants';\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: payload\r\n\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: payload\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: payload\r\n\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: payload\r\n\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: payload\r\n\r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: payload\r\n            }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: payload\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: payload\r\n            }\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}